-- Hierarchical syntax
Grammar    <- Spacing Definition+$definitions EndOfFile;
Definition <- Identifier$id LEFTARROW Expression$expr SEMICOLON;

Expression <- Sequence$expr (SLASH Sequence)*$choices;
Sequence   <- Prefix*;
Prefix     <- @prefix (@@AND / @@NOT)? Suffix$suffix;
Suffix     <- Primary$expr @suffix (@@QUESTION / @@STAR / @@PLUS)?;
Primary    <- Identifier !LEFTARROW
            / OPEN Expression CLOSE
            / Literal
            / Class
            / DOT
            ;

-- Lexical syntax
Identifier <- IdentStart IdentCont* Spacing;
IdentStart <- [a-zA-Z_];
IdentCont  <- IdentStart / [0-9];

Literal <- ['] (!['] Char)*$chars ['] Spacing
         / ["] (!["] Char)*$chars ["] Spacing
         ;
Class   <- '[' (!']' Range)*$class ']' Spacing;
Range   <- @range Char$start '-' Char$stop / @char Char$char;
Char    <- '\\' [nrt'"\[\]\\]$char
         / '\\' ([0-2][0-7][0-7])$ocatal
         / '\\' ([0-7][0-7]?)$octal
         / !'\\' .$char;

LEFTARROW <- '<-' Spacing;
SEMICOLON <- ';'  Spacing;
SLASH     <- '/'  Spacing;
AND       <- '&'  Spacing;
NOT       <- '!'  Spacing;
QUESTION  <- '?'  Spacing;
STAR      <- '*'  Spacing;
PLUS      <- '+'  Spacing;
OPEN      <- '('  Spacing;
CLOSE     <- ')'  Spacing;
DOT       <- '.'  Spacing;

Spacing   <- (Space / Comment)*$comments;
Comment   <- '--' (!EndOfLine .)* EndOfLine;
Space     <- ' ' / '\t' / EndOfLine;
EndOfLine <- '\r\n' / '\n' / '\r';
EndOfFile <- !.;
